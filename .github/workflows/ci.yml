name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Cancel in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre-checks:
    name: Pre-flight Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check file permissions
        run: |
          echo "Checking script permissions..."
          test -f install.sh || exit 1
          test -f rm.sh || exit 1
          find scripts -type f -name "*.sh" | while read -r script; do
            echo "  ‚úì $script"
          done
          find tests -type f -name "*.sh" | while read -r script; do
            echo "  ‚úì $script"
          done

      - name: Validate shell scripts
        run: |
          echo "Validating shell scripts..."
          for script in install.sh rm.sh scripts/*.sh tests/*.sh; do
            if [ -f "$script" ]; then
              bash -n "$script" || exit 1
              echo "  ‚úì $script is valid"
            fi
          done

      - name: Check Dockerfiles
        run: |
          echo "Checking Dockerfiles..."
          for df in Dockerfile.*; do
            if [ -f "$df" ]; then
              echo "  ‚úì $df exists"
            fi
          done

  docker-matrix:
    name: Docker Test - ${{ matrix.distro }}
    runs-on: ubuntu-latest
    needs: pre-checks
    strategy:
      fail-fast: false
      matrix:
        include:
          - distro: ubuntu
            dockerfile: Dockerfile.ubuntu
            tag: nixdotfiles:test-ubuntu
          - distro: fedora
            dockerfile: Dockerfile.fedora
            tag: nixdotfiles:test-fedora
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: |
          echo "üê≥ Building ${{ matrix.distro }} image..."
          docker build --pull -f ${{ matrix.dockerfile }} -t ${{ matrix.tag }} .

      - name: Run smoke test
        run: |
          echo "üß™ Running smoke test for ${{ matrix.distro }}..."
          docker run --rm -e TERM=xterm-256color ${{ matrix.tag }} \
            /bin/bash -lc ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh && fish -lc './tests/docker-test-commands.fish'"

      - name: Test idempotency
        run: |
          echo "üîÑ Testing idempotency for ${{ matrix.distro }}..."
          docker run --rm ${{ matrix.tag }} \
            /bin/bash -lc ". /nix/var/nix/profiles/default/etc/profile.d/nix-daemon.sh && ./install.sh && echo '‚úÖ Idempotent install succeeded'"

  native-test:
    name: Native Nix Test
    runs-on: ${{ matrix.os }}
    needs: pre-checks
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v14
        with:
          extra-conf: |
            experimental-features = nix-command flakes

      - name: Nix version
        run: nix --version

      - name: Run install script
        run: |
          chmod +x install.sh
          ./install.sh

      - name: List installed packages
        run: nix profile list

      - name: Run pre-flight tests
        run: make test-pre

      - name: Test fish configuration
        run: |
          fish -lc "echo '‚úÖ Fish shell is working'"
          fish -lc './tests/docker-test-commands.fish' || echo "Note: Some tests may fail outside Docker"

  summary:
    name: CI Summary
    needs: [docker-matrix, native-test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Summary
        run: |
          echo "## CI Summary"
          echo ""
          echo "### Test Results"
          echo "- Docker tests: ${{ needs.docker-matrix.result }}"
          echo "- Native tests: ${{ needs.native-test.result }}"
          echo ""

          if [ "${{ needs.docker-matrix.result }}" = "success" ] && \
             [ "${{ needs.native-test.result }}" = "success" ]; then
            echo "‚úÖ **All tests passed!**"
          else
            echo "‚ùå **Some tests failed**"
            echo ""
            echo "Please check the logs above for details."
            exit 1
          fi
